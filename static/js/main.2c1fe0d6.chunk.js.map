{"version":3,"sources":["App.js","index.js"],"names":["App","useState","winner","setWinner","xTurn","setXTurn","position","result","grid","setGrid","arrayOfWinningConditions","useEffect","functionThatCheckIfSomeoneWonTheGame","moveHandler","props","xWinner","oWinner","i","length","JSON","stringify","className","onClick","id","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c1fe0d6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const [winner, setWinner ] = useState();\n  const [xTurn, setXTurn] = useState(true);\n  const [grid, setGrid] = useState([\n    { position: \"square-top-left\", result: null},\n    { position: \"square-top-center\", result: null},\n    { position: \"square-top-right\", result: null}, \n      { position: \"square-middle-left\", result: null}, \n      { position: \"square-middle-center\", result: null}, \n      { position: \"square-middle-right\", result: null}, \n        { position: \"square-bottom-left\", result: null}, \n        { position: \"square-bottom-center\", result: null}, \n        { position: \"square-bottom-right\", result: null}, \n  ]) \n\n  let arrayOfWinningConditions = [\n    //hotizantal\n    [ grid[0].result, grid[1].result, grid[2].result ],\n    [ grid[3].result, grid[4].result, grid[5].result ],\n    [ grid[6].result, grid[7].result, grid[8].result ],\n    //cross\n    [ grid[0].result, grid[4].result, grid[8].result ],\n    [ grid[6].result, grid[4].result, grid[2].result ],\n    //vertical\n    [ grid[0].result, grid[3].result, grid[6].result ],\n    [ grid[1].result, grid[4].result, grid[7].result ],\n    [ grid[2].result, grid[5].result, grid[8].result ],\n  ];\n      //useEffect to test winning condition\n      useEffect(() => {\n        functionThatCheckIfSomeoneWonTheGame();\n      }, arrayOfWinningConditions)\n\n  const moveHandler = (props) => {\n    //top-left\n    if(props === grid[0].position && xTurn === true ) {\n      grid[0].result = \"X\";\n    } else if (props === grid[0].position && xTurn === false) {\n      grid[0].result = \"O\";\n    //top-center\n    } else if ( props === grid[1].position && xTurn === true ) {\n      grid[1].result = \"X\";\n    } else if (props === grid[1].position && xTurn === false) {\n      grid[1].result = \"O\";\n    //top-right\n    } else if ( props === grid[2].position && xTurn === true ) {\n      grid[2].result = \"X\";\n    } else if (props === grid[2].position && xTurn === false) {\n      grid[2].result = \"O\";\n        //middle-left\n        } else if (props === grid[3].position && xTurn === true ) {\n          grid[3].result = \"X\";\n        } else if (props === grid[3].position && xTurn === false) {\n          grid[3].result = \"O\";\n        //middle-center\n        } else if (props === grid[4].position && xTurn === true ) {\n          grid[4].result = \"X\";\n        } else if (props === grid[4].position && xTurn === false) {\n          grid[4].result = \"O\";\n        //middle-right\n        } else if (props === grid[5].position && xTurn === true ) {\n          grid[5].result = \"X\";\n        } else if (props === grid[5].position && xTurn === false) {\n          grid[5].result = \"O\";\n          //botton-left\n          } else if (props === grid[6].position && xTurn === true ) {\n            grid[6].result = \"X\";\n          } else if (props === grid[6].position && xTurn === false) {\n            grid[6].result = \"O\";\n          //bottom-center\n          } else if (props === grid[7].position && xTurn === true ) {\n            grid[7].result = \"X\";\n          } else if (props === grid[7].position && xTurn === false) {\n            grid[7].result = \"O\";\n          //bottom-right\n          } else if (props === grid[8].position && xTurn === true ) {\n            grid[8].result = \"X\";\n          } else if (props === grid[8].position && xTurn === false) {\n            grid[8].result = \"O\";\n          }\n\n      setXTurn((xTurn) => (xTurn = !xTurn));\n  }\n\n  const functionThatCheckIfSomeoneWonTheGame = () => {\n    let xWinner = ['X', 'X', 'X'];\n    let oWinner = ['O', 'O', 'O'];\n\n    for (let i = 0; i < arrayOfWinningConditions.length; i++) {\n      if (JSON.stringify(arrayOfWinningConditions[i]) === JSON.stringify(xWinner)) {\n        setWinner(\"X WINS\");      \n      } else if (JSON.stringify(arrayOfWinningConditions[i]) === JSON.stringify(oWinner)) {\n        setWinner(\"O WINS\");\n      }\n    };\n  };\n\n  const resetGameHandler = () => {\n    setGrid([\n      { position: \"square-top-left\", result: null},\n      { position: \"square-top-center\", result: null},\n      { position: \"square-top-right\", result: null}, \n        { position: \"square-middle-left\", result: null}, \n        { position: \"square-middle-center\", result: null}, \n        { position: \"square-middle-right\", result: null}, \n          { position: \"square-bottom-left\", result: null}, \n          { position: \"square-bottom-center\", result: null}, \n          { position: \"square-bottom-right\", result: null}, \n    ]);\n    \n    setWinner(\"\");\n    setXTurn(true);\n  }\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"display\">\n        <span className={`turn-display ${winner === \"X WINS\" || winner === \"O WINS\" ? \"display-off\" : \"\"}`} >its Player {xTurn ? \"X\" : \"O\"}'s turn</span>\n        <div className=\"win\">\n          <h2 className=\"winner-display\">{winner}</h2>\n          <button className=\"reset-btn\" onClick={resetGameHandler}>Reset</button>\n        </div>      \n      </div>\n\n      <div className=\"grid\">     \n        <div className={`cell ${grid[0].result}`} id=\"square-top-left\" onClick={((e) => moveHandler(e.target.id))} >{grid[0].result}</div>\n        <div className={`cell ${grid[1].result}`} id=\"square-top-center\" onClick={((e) => moveHandler(e.target.id))} >{grid[1].result}</div>\n        <div className={`cell ${grid[2].result}`} id=\"square-top-right\" onClick={((e) => moveHandler(e.target.id))} >{grid[2].result}</div>\n        <div className={`cell ${grid[3].result}`} id=\"square-middle-left\" onClick={((e) => moveHandler(e.target.id))} >{grid[3].result}</div>\n        <div className={`cell ${grid[4].result}`} id=\"square-middle-center\" onClick={((e) => moveHandler(e.target.id))} >{grid[4].result}</div>\n        <div className={`cell ${grid[5].result}`} id=\"square-middle-right\" onClick={((e) => moveHandler(e.target.id))} >{grid[5].result}</div>\n        <div className={`cell ${grid[6].result}`} id=\"square-bottom-left\" onClick={((e) => moveHandler(e.target.id))} >{grid[6].result}</div>\n        <div className={`cell ${grid[7].result}`} id=\"square-bottom-center\" onClick={((e) => moveHandler(e.target.id))} >{grid[7].result}</div>\n        <div className={`cell ${grid[8].result}`} id=\"square-bottom-right\" onClick={((e) => moveHandler(e.target.id))} >{grid[8].result}</div>\n      </div>      \n    </div>\n  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}